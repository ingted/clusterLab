#!/bin/sh
#
#     RedHat system startup script for hawk
#
#     Copyright (C) 2010  SUSE LLC
#
#     This library is free software; you can redistribute it and/or modify it
#     under the terms of the GNU Lesser General Public License as published by
#     the Free Software Foundation; either version 2.1 of the License, or (at
#     your option) any later version.
#
#     This library is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     Lesser General Public License for more details.
#
#     You should have received a copy of the GNU Lesser General Public License
#     along with this library; if not, see <http://www.gnu.org/licenses/>.
#
### BEGIN INIT INFO
# Provides:          hawk
# Required-Start:    $syslog $remote_fs
# Should-Start:      $time
# Required-Stop:     $syslog $remote_fs
# Should-Stop:       $time
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: hawk daemon providing web GUI for Pacemaker HA clusters
# Description:       Start hawk to provide a web GUI for the Pacemaker
#	High-Availability cluster resource manager.
### END INIT INFO

STATE_FILE=@WWW_BASE@/hawk/tmp/pids/puma.state
PID_FILE=@WWW_BASE@/hawk/tmp/pids/puma.pid
PUMA=$(which puma)
PUMACTL=$(which pumactl)

print_hawk_url() {
	if [ ! -e $STATE_FILE ]; then
		echo -e "\thawk is not running"
	else
		URL=$(cat $STATE_FILE | grep -E '(ssl|tcp):\/\/([^\/\?]+)' -o | head -n 1 | sed -e 's/ssl\:/https\:/' -e 's/tcp\:/http\:/')
		echo -e "\thawk is running at $URL"
	fi
}

# Source LSB init functions
. /etc/rc.d/init.d/functions

case "$1" in
    start)
	@WWW_BASE@/hawk/bin/generate-ssl-cert || {
		exit 1
    	}
	echo -n "Starting hawk "
	$PUMACTL -S $STATE_FILE start
	RETVAL=$?
	echo

	if test "$RETVAL" -eq 0; then
		print_hawk_url
	fi
	;;
    stop)
	echo -n "Shutting down hawk "
	$PUMACTL -S $STATE_FILE stop
	RETVAL=$?
	echo

	;;
    try-restart|condrestart)
	$0 status || exit 0
	$0 restart
	RETVAL=$?
	;;
    restart)
		echo -n "Restarting hawk "
		$PUMACTL -S $STATE_FILE restart
		RETVAL=$?
	;;
    force-reload)
	echo -n "Reload service hawk "
	killproc -p $PID_FILE $PUMA -HUP
	RETVAL=$?
	echo
	;;
    reload)
	echo -n "Reload service hawk "
	killproc -p $PID_FILE $PUMA -HUP
	RETVAL=$?
	;;
    status)
	echo -n "Checking for service hawk "
	status -p $PID_FILE $PUMA
	RETVAL=$?
	echo

	if test "$RETVAL" -eq 0; then
		print_hawk_url
	fi
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
	exit 1
	;;
esac
exit $RETVAL
